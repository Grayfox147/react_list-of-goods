{"version":3,"sources":["App.tsx","ListOfGoods.tsx","Button.tsx","index.tsx"],"names":["SortType","ListOfGoods","React","memo","goods","map","good","Button","children","props","type","className","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reset","reverse","this","visibleGoods","sort","a","b","localeCompare","length","console","log","getReorderedGoods","classNames","onClick","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,2GCdQC,EAA+BC,IAAMC,MAChD,gBAAGC,EAAH,EAAGA,MAAH,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,W,8BCPFC,EAA0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,wBACrC,gDACEC,KAAK,SACLC,UAAU,UACNF,GAHN,aAKGD,MFHQI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGZ,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAMa,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUhB,EAASiB,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CACZH,SAAUhB,EAASoB,YARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUhB,EAASsB,UAdzB,EAkBEC,MAAQ,WACN,EAAKJ,SAAS,CACZH,SAAUhB,EAASiB,KACnBF,YAAY,KArBlB,EAyBES,QAAU,WACR,EAAKL,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBA3BzB,4CA+BE,WACE,MAGIU,KAAKX,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAGIU,EAvEH,SACLtB,EADK,GAGJ,IADCY,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNW,EAAY,YAAOtB,GAmBzB,OAfIY,IAAahB,EAASoB,UACxBM,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1Cb,IAAahB,EAASsB,QACxBI,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGvChB,GACFW,EAAaF,UAIfQ,QAAQC,IAAIjB,EAAUD,GAEfW,EA+CgBQ,CAAkBtB,EAAiBa,KAAKX,OAE7D,OACE,sBAAKH,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEA,UAAWwB,IACT,iBACA,CACE,WAAYnB,IAAahB,EAASoB,WAGtCgB,QAASX,KAAKP,eAPhB,iCAYA,cAAC,EAAD,CACEP,UAAWwB,IACT,iBACA,CACE,WAAYnB,IAAahB,EAASsB,SAGtCc,QAASX,KAAKJ,aAPhB,4BAYA,cAAC,EAAD,CACEV,UAAWwB,IACT,iBACA,CACE,YAAapB,IAGjBqB,QAASX,KAAKD,QAPhB,sBAWET,GAAcC,IAAahB,EAASiB,OACpC,cAAC,EAAD,CACEN,UAAU,4BACVyB,QAASX,KAAKF,MAFhB,sBASJ,cAACtB,EAAD,CAAaG,MAAOsB,WAvF5B,GAAyBxB,IAAMmC,eG/D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3785baa2.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { ListOfGoods } from './ListOfGoods';\nimport { Button } from './Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <Button\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </Button>\n\n          <Button\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </Button>\n\n          <Button\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </Button>\n          {(isReversed || sortType !== SortType.NONE) && (\n            <Button\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </Button>\n          )}\n\n        </div>\n        <ListOfGoods goods={visibleGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const ListOfGoods: React.FC<Props> = React.memo(\n  ({ goods }) => (\n    <ul>\n      {goods.map((good) => (\n        <li\n          key={good}\n          data-cy=\"Good\"\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import React from 'react';\n\ntype Props = React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const Button: React.FC<Props> = ({ children, ...props }) => (\n  <button\n    type=\"button\"\n    className=\"button\"\n    {...props}\n  >\n    {children}\n  </button>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}